apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.google.gms.google-services'

android {
    signingConfigs {
        release {
            storeFile file('/Users/josesantos/release')
            storePassword 'release123'
            keyAlias 'release123'
            keyPassword 'release123'
        }
    }
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.example.movies"
        minSdkVersion 26
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    buildTypes {
        release {
            minifyEnabled true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

android.applicationVariants.all { variant ->
    task "listDependencies${variant.name.capitalize()}"() {
        outputs.upToDateWhen { false }
        doLast {
            println "Depdencies for ${variant.name.capitalize()}\n"
            configurations.getByName("${variant.name}RuntimeClasspath").getResolvedConfiguration().getFirstLevelModuleDependencies().each {
                println "${it.moduleGroup}:${it.moduleName} -> ${it.moduleVersion}"
            }
        }
    }
}

android.applicationVariants.all { variant ->
    task "copyDependencies${variant.name.capitalize()}"() {
        outputs.upToDateWhen { false }
        doLast {
            println "Executing copyDependencies${variant.name.capitalize()}"
            variant.getCompileClasspath().each { fileDependency ->
                def sourcePath = fileDependency.absolutePath
                def destinationPath = project.projectDir.path + "/build/dependencies/${variant.name}/"
                println "Copying dependency:"
                println sourcePath

//The monstrous regex that gets the name of the lib from itâ€™s exploded .aar path
                def dependencyName
                if (sourcePath.contains("classes.jar")) {
                    def dependencyNameRegexResult = (sourcePath =~ /.*\/(.*)\.aar\/.*\/jars\/classes\.jar/)
                    if (dependencyNameRegexResult.size() > 0) {
                        dependencyName = dependencyNameRegexResult[0][1]
                        println "Exploded AAR found : ${dependencyName}"
                    }
                }

                copy {
                    from sourcePath
                    into destinationPath

                    rename {String filename ->
                        if (filename.contains("classes.jar") && dependencyName != null) {
                            dependencyName = "${dependencyName}.jar"
                            println "Renaming dependency file to : ${dependencyName}"
                            return dependencyName
                        }
                        return filename
                    }
                }
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    //noinspection GradleCompatible
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    implementation platform('com.google.firebase:firebase-bom:27.1.0')
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-auth-ktx'

//    implementation "com.facebook.android:facebook-android-sdk:4.42.0"
    implementation 'com.facebook.android:facebook-login:8.2.0'

    // Also declare the dependency for the Google Play services library and specify its version
    implementation 'com.google.android.gms:play-services-auth:19.0.0'

    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.1'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'
    implementation 'com.squareup.okhttp3:okhttp:4.2.2'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.2.2'
    implementation 'androidx.paging:paging-runtime-ktx:3.0.0-beta03'

    /*############################ Picasso ##########################################*/
    implementation 'com.squareup.picasso:picasso:2.71828'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'
}
